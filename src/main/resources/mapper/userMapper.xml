<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="app.codingGround.api.user.mapper.UserMapper">

    <select id="getUserInfo" resultType="InfoDto">
        SELECT
            U.USER_NICKNAME,
            U.USER_AFFILIATION_DETAIL,
            U.USER_PROFILE_IMG,
            US.RANK_NUM,
            COUNT(GR.GAME_RECORD_NUM) AS matches,
            SUM(CASE WHEN GR.GAME_RECORD IN (1, 2, 3, 4) THEN 1 ELSE 0 END) AS wins,
            SUM(CASE WHEN GR.GAME_RECORD = 5 THEN 1 ELSE 0 END) AS losses,
            ROUND((SUM(CASE WHEN GR.GAME_RECORD IN (1, 2, 3, 4) THEN 1 ELSE 0 END) / COUNT(GR.GAME_RECORD)) * 100, 1) AS RECORD_PERCENTAGE
        FROM
            TB_USER U
                JOIN
            TB_USER_SEASON US ON U.USER_NUM = US.USER_NUM
                JOIN
            TB_SEASON S ON US.SEASON_NUM = S.SEASON_NUM
                LEFT JOIN
            TB_GAME_RECORD GR ON U.USER_NUM = GR.USER_NUM AND US.SEASON_NUM = GR.SEASON_NUM
        WHERE
            U.USER_ID = #{userId}
          AND US.SEASON_NUM = (SELECT MAX(SEASON_NUM) FROM TB_USER_SEASON WHERE USER_NUM = U.USER_NUM)
        GROUP BY
            U.USER_NICKNAME,
            U.USER_AFFILIATION_DETAIL,
            U.USER_PROFILE_IMG,
            US.RANK_NUM;
    </select>

    <select id="getUserRankings" resultType="RankingDto">
        SELECT
            SUM(CASE WHEN GAME_RECORD = 1 THEN 1 ELSE 0 END) AS COUNT1,
            SUM(CASE WHEN GAME_RECORD = 2 THEN 1 ELSE 0 END) AS COUNT2,
            SUM(CASE WHEN GAME_RECORD = 3 THEN 1 ELSE 0 END) AS COUNT3,
            SUM(CASE WHEN GAME_RECORD = 4 THEN 1 ELSE 0 END) AS COUNT4,
            SUM(CASE WHEN GAME_RECORD = 5 THEN 1 ELSE 0 END) AS COUNT5
        FROM
            TB_USER
                JOIN
            TB_GAME_RECORD ON TB_USER.USER_NUM = TB_GAME_RECORD.USER_NUM
        WHERE
            TB_USER.USER_ID = #{userId}
          AND TB_GAME_RECORD.SEASON_NUM = (SELECT MAX(SEASON_NUM) FROM TB_USER_SEASON WHERE USER_NUM = TB_USER.USER_NUM)
        GROUP BY
            TB_USER.USER_ID;
    </select>

    <select id="getUserBadge" resultType="GameBadgeDto">
        SELECT
            TB_SEASON.RANK_NUM as BADGE_NUM,
            TB_SEASON.SEASON_NAME as BADGE_NAME
        FROM
            TB_USER
                JOIN
            TB_SEASON ON TB_USER.USER_NUM = TB_SEASON.USER_NUM
        WHERE
            TB_USER.USER_ID = 'test2' AND TB_SEASON.SEASON_NUM != (
        SELECT MAX(SEASON_NUM) FROM TB_SEASON JOIN TB_USER ON TB_USER.USER_NUM = TB_SEASON.USER_NUM WHERE  TB_USER.USER_ID = 'test2'
    )
        UNION DISTINCT
        SELECT
            TB_BADGE.BADGE_NAME,
            TB_ACHIEVEMENT.BADGE_NUM
        FROM
            TB_USER
                JOIN
            TB_ACHIEVEMENT ON TB_USER.USER_NUM = TB_ACHIEVEMENT.USER_NUM
                JOIN
            TB_BADGE ON TB_ACHIEVEMENT.BADGE_NUM = TB_BADGE.BADGE_NUM
        WHERE
            TB_USER.USER_ID = #{userId};
    </select>

</mapper>
